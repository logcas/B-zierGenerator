!function r(s,h,a){function c(i,t){if(!h[i]){if(!s[i]){var e="function"==typeof require&&require;if(!t&&e)return e(i,!0);if(l)return l(i,!0);var o=new Error("Cannot find module '"+i+"'");throw o.code="MODULE_NOT_FOUND",o}var n=h[i]={exports:{}};s[i][0].call(n.exports,function(t){return c(s[i][1][t]||t)},n,n.exports,r,s,h,a)}return h[i].exports}for(var l="function"==typeof require&&require,t=0;t<a.length;t++)c(a[t]);return c}({1:[function(t,i,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=t("./bezier"),n=document.querySelector("#app"),r=document.querySelector("#draw"),s=document.querySelector("#clear"),h=document.querySelector("#playground"),a=document.querySelector("#curve"),c=new o.Bezier(n,a);h.onclick=function(t){var i=t.layerX,e=t.layerY;c.add({x:i,y:e})},r.onclick=function(){c.draw()},s.onclick=function(){c.clear()}},{"./bezier":2}],2:[function(t,i,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(t,i,e){if(this.points=[],this.movePoints=[],this.startPoint={x:0,y:0},this.curveNextPoint={x:0,y:0},this.moveLineColor=[],this.drawTimes=200,this.scale=0,this.isDrawing=!1,null===t||null===i)throw new Error("canvas is null");this.canvas=t,this.curveCanvas=i,this.ctx=this.canvas.getContext("2d"),this.curveCtx=this.curveCanvas.getContext("2d"),this.config=e||{width:600,height:500,style:{pointColor:"#000",lineColor:"#DCDCDC",lineWidth:5,lineCap:"round",radius:5}},this.canvas.width=this.config.width,this.canvas.height=this.config.height,this.curveCanvas.width=this.config.width,this.curveCanvas.height=this.config.height}return t.prototype.add=function(t){this.isDrawing||(this.points.push(t),this.drawStaticPoint())},t.prototype.clear=function(){if(!this.isDrawing){var t=this.ctx,i=this.curveCtx;t.clearRect(0,0,this.config.width,this.config.height),i.clearRect(0,0,this.config.width,this.config.height),this.points=[]}},t.prototype.draw=function(t){if(t&&(this.points=t),!(this.isDrawing||this.points.length<=1)){console.log("draw start:"),this.startPoint=this.points[0],console.log(this.startPoint),this.movePoints=[],this.moveLineColor=[],this.scale=this.points.length-1;for(var i=0;i<this.scale;++i)this.moveLineColor.push(this.randomColor());var e=this.ctx,o=this.curveCtx;e.clearRect(0,0,this.config.width,this.config.height),o.clearRect(0,0,this.config.width,this.config.height),this.isDrawing=!0,this.animate()}},t.prototype.animate=function(){var o=0,n=this,r=this.ctx;!function t(){if(o>=n.drawTimes)return n.calculateMovePoint(1),n.movePoints.splice(0,n.movePoints.length),r.clearRect(0,0,n.config.width,n.config.height),n.drawStaticPoint(),n.drawCurve(),n.startPoint={x:0,y:0},n.curveNextPoint={x:0,y:0},void(n.isDrawing=!1);n.drawStaticPoint();var i=(new Date).getTime();n.calculateMovePoint(o/n.drawTimes);var e=(new Date).getTime()-i;console.log("calculate: "+e+" ms"),i=(new Date).getTime(),n.drawCurve(),e=(new Date).getTime()-i,console.log("render: "+e+" ms"),n.movePoints.splice(0,n.movePoints.length),++o,window.requestAnimationFrame(t)}()},t.prototype.drawStaticPoint=function(){if(0!==this.points.length){var t=this.config,i=this.config.style,e=this.ctx,o=this.points;e.clearRect(0,0,t.width,t.height),e.beginPath(),e.moveTo(o[0].x,o[0].y),e.strokeStyle=i.lineColor,e.lineWidth=i.lineWidth,e.lineCap=i.lineCap,o.forEach(function(t){e.lineTo(t.x,t.y),e.stroke()}),o.forEach(function(t){e.beginPath(),e.moveTo(t.x,t.y),e.arc(t.x,t.y,i.radius,0,2*Math.PI,!1),e.fillStyle=i.pointColor,e.fill()})}},t.prototype.calculateMovePoint=function(t){for(var i=[],e=this.points,o=0,n=e.length;o<n-1;++o){var r=e[o+1].x-e[o].x,s=e[o+1].y-e[o].y;i.push({x:r*t+e[o].x,y:s*t+e[o].y})}for(;1!==i.length;){var h=i.length;for(o=0,n=i.length;o<n-1;++o){r=i[o+1].x-i[o].x,s=i[o+1].y-i[o].y;i.push({x:r*t+i[o].x,y:s*t+i[o].y})}this.movePoints.push(i.splice(0,h).slice())}1===i.length&&(console.log("your startpoint:"),console.log(this.startPoint),0!==this.curveNextPoint.x&&0!==this.curveNextPoint.y&&(this.startPoint=this.curveNextPoint),this.curveNextPoint=i[0])},t.prototype.drawCurve=function(){var e=this,o=this.ctx,t=this.curveCtx;o.lineWidth=3,this.movePoints.forEach(function(t,i){o.beginPath(),o.moveTo(t[0].x,t[0].y),o.strokeStyle=e.moveLineColor[i],t.forEach(function(t){o.lineTo(t.x,t.y),o.stroke()}),t.forEach(function(t){o.beginPath(),o.fillStyle=e.moveLineColor[i],o.arc(t.x,t.y,e.config.style.radius,0,2*Math.PI,!1),o.fill()})}),t.beginPath(),console.log("draw agian:"),console.log(this.startPoint),t.moveTo(this.startPoint.x,this.startPoint.y),t.strokeStyle="red",t.lineWidth=2,t.lineTo(this.curveNextPoint.x,this.curveNextPoint.y),t.stroke()},t.prototype.randomColor=function(){return"rgba("+Math.floor(256*Math.random())+","+Math.floor(256*Math.random())+","+Math.floor(256*Math.random())+",0.5)"},t}();e.Bezier=o},{}]},{},[1]);
//# sourceMappingURL=bundle.js.map
